@using System.Text.Json

@inject IJSRuntime JS

<div class="card shadow-none bg-transparent border-secondary" id="@id">
    <div class="card-body p-1">
        <h4 class="card-title mb-1">Object Dump: @_model</h4>
        <pre class="json mb-0">@jsonString</pre>
    </div>
</div>

@code {
    private MyJS myJS;
    private string id = Guid.NewGuid().ToString();

    [Parameter]
    public object Model { get; set; }
    private object _model { get; set; }
    private string jsonString { get; set; } = "null";

    protected override void OnInitialized()
    {
        myJS = new(JS);
        @* Console.WriteLine("d OnInitialized"); *@
        @* UpdateModel(); *@
        base.OnInitialized();
    }

    protected override void OnParametersSet()
    {
        @* Console.WriteLine("d OnParametersSet"); *@
        UpdateModel();
    }

    protected async Task UpdateModel()
    {

        if(_model == Model) return;

        _model = Model;

        try
        {
            jsonString = JsonSerializer.Serialize(_model);
            await myJS.BeauityJsonInSelector($"#{id} .json", jsonString);
        }
        catch (System.Exception ex)
        {
            jsonString = ex.Message;
        }
        finally
        {
            StateHasChanged();
        }
    }
}