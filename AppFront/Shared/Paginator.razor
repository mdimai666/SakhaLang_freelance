<nav aria-label="Page navigation">
    <ul class="pagination justify-content-center mt-2">
        <li class="page-item prev-item">
            <a class="page-link" @onclick=OnClickPrev></a>
        </li>
        @* <li class="page-item">
            <a class="page-link" href="javascript:void(0);">1</a>
            </li>
            <li class="page-item">
            <a class="page-link" href="javascript:void(0);">2</a>
            </li>
            <li class="page-item">
            <a class="page-link" href="javascript:void(0);">3</a>
            </li>
            <li class="page-item active" aria-current="page">
            <a class="page-link" href="javascript:void(0);">4</a>
            </li>
            <li class="page-item">
            <a class="page-link" href="javascript:void(0);">5</a>
            </li>
            <li class="page-item">
            <a class="page-link" href="javascript:void(0);">6</a>
            </li>
            <li class="page-item">
            <a class="page-link" href="javascript:void(0);">7</a>
            </li> *@
        @for (int _p = startPage; _p <= endPage; _p++)
        {
            int p = _p;

            string _class = p == currentPage ? "active" : "";
            <li class="page-item @_class">
                <a class="page-link" @onclick="e=>OnClickPage(p)">
                    @p
                </a>
            </li>
        }
        <li class="page-item next-item">
            <a class="page-link" @onclick=OnClickNext></a>
        </li>
    </ul>
</nav>

@code {
    [Parameter]
    public int TotalPages { get; set; }

    [Parameter]
    public EventCallback<int> OnChangePage { get; set; }

    private int currentPage { get; set; } = 1;
    private int startPage { get; set; } = 1;
    private int endPage { get; set; } = 6;

    void OnClickPage(int page)
    {
        if (page != currentPage)
        {
            currentPage = page;
            OnChangePage.InvokeAsync(currentPage);
        }
    }

    void OnClickNext()
    {
        if (currentPage < endPage)
        {
            currentPage++;
            OnChangePage.InvokeAsync(currentPage);
        }

    }

    void OnClickPrev()
    {
        if (currentPage > startPage)
        {
            currentPage--;
            OnChangePage.InvokeAsync(currentPage);
        }
    }
}